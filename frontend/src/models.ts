/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AudioDevice {
  name: string;
  default: boolean;
  volume: number;
  mute: boolean;
  description: string;
  driver: string;
  form_factor:
    | "car"
    | "computer"
    | "hands-free"
    | "handset"
    | "headphone"
    | "headset"
    | "hifi"
    | "internal"
    | "microphone"
    | "portable"
    | "speaker"
    | "tv"
    | "unknown"
    | "webcam";
  index: number;
  is_monitor: boolean;
  state: "idle" | "invalid" | "running" | "suspended";
  type: "sink" | "source";
  properties?: {} | null;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AudioDeviceOptions {
  name: string;
  default: boolean;
  volume: number;
  mute: boolean;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AudioTrack {
  name: string;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Devices {
  video?: {
    [k: string]: VideoDevice;
  };
  audio?: {
    [k: string]: AudioDevice;
  };
}
export interface VideoDevice {
  name: string;
  index: number;
  closed: boolean;
  description: string;
  capabilities: string[];
  video_sizes: VideoSize[];
}
export interface VideoSize {
  height: number;
  width: number;
  fps: number[];
  format: string;
}
export interface AudioDevice {
  name: string;
  default: boolean;
  volume: number;
  mute: boolean;
  description: string;
  driver: string;
  form_factor:
    | "car"
    | "computer"
    | "hands-free"
    | "handset"
    | "headphone"
    | "headset"
    | "hifi"
    | "internal"
    | "microphone"
    | "portable"
    | "speaker"
    | "tv"
    | "unknown"
    | "webcam";
  index: number;
  is_monitor: boolean;
  state: "idle" | "invalid" | "running" | "suspended";
  type: "sink" | "source";
  properties?: {} | null;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MachineState {
  devices?: Devices;
  webrtc_offer?: null | WebrtcOffer;
}
export interface Devices {
  video?: {
    [k: string]: VideoDevice;
  };
  audio?: {
    [k: string]: AudioDevice;
  };
}
export interface VideoDevice {
  name: string;
  index: number;
  closed: boolean;
  description: string;
  capabilities: string[];
  video_sizes: VideoSize[];
}
export interface VideoSize {
  height: number;
  width: number;
  fps: number[];
  format: string;
}
export interface AudioDevice {
  name: string;
  default: boolean;
  volume: number;
  mute: boolean;
  description: string;
  driver: string;
  form_factor:
    | "car"
    | "computer"
    | "hands-free"
    | "handset"
    | "headphone"
    | "headset"
    | "hifi"
    | "internal"
    | "microphone"
    | "portable"
    | "speaker"
    | "tv"
    | "unknown"
    | "webcam";
  index: number;
  is_monitor: boolean;
  state: "idle" | "invalid" | "running" | "suspended";
  type: "sink" | "source";
  properties?: {} | null;
}
export interface WebrtcOffer {
  sdp: string;
  type: "answer" | "offer" | "pranswer" | "rollback";
  tracks: Tracks;
}
export interface Tracks {
  client_video?: boolean;
  client_audio?: boolean;
  machine_video?: null | VideoTrack;
  machine_audio?: null | AudioTrack;
}
export interface VideoTrack {
  name: string;
  height: number;
  width: number;
  fps: number;
  format: string;
}
export interface AudioTrack {
  name: string;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The :class:`RTCRtpCodecCapability` dictionary provides information on
 * codec capabilities.
 */
export interface RTCRtpCodecCapability {
  mimeType: string;
  clockRate: number;
  channels?: number | null;
  parameters?: {
    [k: string]: number | string | null;
  };
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Tracks {
  client_video?: boolean;
  client_audio?: boolean;
  machine_video?: null | VideoTrack;
  machine_audio?: null | AudioTrack;
}
export interface VideoTrack {
  name: string;
  height: number;
  width: number;
  fps: number;
  format: string;
}
export interface AudioTrack {
  name: string;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VideoDevice {
  name: string;
  index: number;
  closed: boolean;
  description: string;
  capabilities: string[];
  video_sizes: VideoSize[];
}
export interface VideoSize {
  height: number;
  width: number;
  fps: number[];
  format: string;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VideoSize {
  height: number;
  width: number;
  fps: number[];
  format: string;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VideoTrack {
  name: string;
  height: number;
  width: number;
  fps: number;
  format: string;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface WebrtcInfo {
  video_codecs: RTCRtpCodecCapability[];
  audio_codecs: RTCRtpCodecCapability1[];
}
/**
 * The :class:`RTCRtpCodecCapability` dictionary provides information on
 * codec capabilities.
 */
export interface RTCRtpCodecCapability {
  mimeType: string;
  clockRate: number;
  channels?: number | null;
  parameters?: {
    [k: string]: number | string | null;
  };
}
/**
 * The :class:`RTCRtpCodecCapability` dictionary provides information on
 * codec capabilities.
 */
export interface RTCRtpCodecCapability1 {
  mimeType: string;
  clockRate: number;
  channels?: number | null;
  parameters?: {
    [k: string]: number | string | null;
  };
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface WebrtcOffer {
  sdp: string;
  type: "answer" | "offer" | "pranswer" | "rollback";
  tracks: Tracks;
}
export interface Tracks {
  client_video?: boolean;
  client_audio?: boolean;
  machine_video?: null | VideoTrack;
  machine_audio?: null | AudioTrack;
}
export interface VideoTrack {
  name: string;
  height: number;
  width: number;
  fps: number;
  format: string;
}
export interface AudioTrack {
  name: string;
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: networking.proto

package ipc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AudioDevice_AudioDeviceState int32

const (
	AudioDevice_IDLE      AudioDevice_AudioDeviceState = 0
	AudioDevice_INVALID   AudioDevice_AudioDeviceState = 1
	AudioDevice_RUNNING   AudioDevice_AudioDeviceState = 2
	AudioDevice_SUSPENDED AudioDevice_AudioDeviceState = 3
)

// Enum value maps for AudioDevice_AudioDeviceState.
var (
	AudioDevice_AudioDeviceState_name = map[int32]string{
		0: "IDLE",
		1: "INVALID",
		2: "RUNNING",
		3: "SUSPENDED",
	}
	AudioDevice_AudioDeviceState_value = map[string]int32{
		"IDLE":      0,
		"INVALID":   1,
		"RUNNING":   2,
		"SUSPENDED": 3,
	}
)

func (x AudioDevice_AudioDeviceState) Enum() *AudioDevice_AudioDeviceState {
	p := new(AudioDevice_AudioDeviceState)
	*p = x
	return p
}

func (x AudioDevice_AudioDeviceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioDevice_AudioDeviceState) Descriptor() protoreflect.EnumDescriptor {
	return file_networking_proto_enumTypes[0].Descriptor()
}

func (AudioDevice_AudioDeviceState) Type() protoreflect.EnumType {
	return &file_networking_proto_enumTypes[0]
}

func (x AudioDevice_AudioDeviceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type AudioDevice_Type int32

const (
	AudioDevice_SINK   AudioDevice_Type = 0
	AudioDevice_SOURCE AudioDevice_Type = 1
)

// Enum value maps for AudioDevice_Type.
var (
	AudioDevice_Type_name = map[int32]string{
		0: "SINK",
		1: "SOURCE",
	}
	AudioDevice_Type_value = map[string]int32{
		"SINK":   0,
		"SOURCE": 1,
	}
)

func (x AudioDevice_Type) Enum() *AudioDevice_Type {
	p := new(AudioDevice_Type)
	*p = x
	return p
}

func (x AudioDevice_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioDevice_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_networking_proto_enumTypes[1].Descriptor()
}

func (AudioDevice_Type) Type() protoreflect.EnumType {
	return &file_networking_proto_enumTypes[1]
}

func (x AudioDevice_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type AudioDevice_AudioDeviceFormFactor int32

const (
	AudioDevice_CAR        AudioDevice_AudioDeviceFormFactor = 0
	AudioDevice_COMPUTER   AudioDevice_AudioDeviceFormFactor = 1
	AudioDevice_HANDS_FREE AudioDevice_AudioDeviceFormFactor = 2
	AudioDevice_HANDSET    AudioDevice_AudioDeviceFormFactor = 3
	AudioDevice_HEADPHONE  AudioDevice_AudioDeviceFormFactor = 4
	AudioDevice_HEADSET    AudioDevice_AudioDeviceFormFactor = 5
	AudioDevice_HIFI       AudioDevice_AudioDeviceFormFactor = 6
	AudioDevice_INTERNAL   AudioDevice_AudioDeviceFormFactor = 7
	AudioDevice_MICROPHONE AudioDevice_AudioDeviceFormFactor = 8
	AudioDevice_PORTABLE   AudioDevice_AudioDeviceFormFactor = 9
	AudioDevice_SPEAKER    AudioDevice_AudioDeviceFormFactor = 10
	AudioDevice_TV         AudioDevice_AudioDeviceFormFactor = 11
	AudioDevice_WEBCAM     AudioDevice_AudioDeviceFormFactor = 12
	AudioDevice_UNKNOWN    AudioDevice_AudioDeviceFormFactor = 13
)

// Enum value maps for AudioDevice_AudioDeviceFormFactor.
var (
	AudioDevice_AudioDeviceFormFactor_name = map[int32]string{
		0:  "CAR",
		1:  "COMPUTER",
		2:  "HANDS_FREE",
		3:  "HANDSET",
		4:  "HEADPHONE",
		5:  "HEADSET",
		6:  "HIFI",
		7:  "INTERNAL",
		8:  "MICROPHONE",
		9:  "PORTABLE",
		10: "SPEAKER",
		11: "TV",
		12: "WEBCAM",
		13: "UNKNOWN",
	}
	AudioDevice_AudioDeviceFormFactor_value = map[string]int32{
		"CAR":        0,
		"COMPUTER":   1,
		"HANDS_FREE": 2,
		"HANDSET":    3,
		"HEADPHONE":  4,
		"HEADSET":    5,
		"HIFI":       6,
		"INTERNAL":   7,
		"MICROPHONE": 8,
		"PORTABLE":   9,
		"SPEAKER":    10,
		"TV":         11,
		"WEBCAM":     12,
		"UNKNOWN":    13,
	}
)

func (x AudioDevice_AudioDeviceFormFactor) Enum() *AudioDevice_AudioDeviceFormFactor {
	p := new(AudioDevice_AudioDeviceFormFactor)
	*p = x
	return p
}

func (x AudioDevice_AudioDeviceFormFactor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioDevice_AudioDeviceFormFactor) Descriptor() protoreflect.EnumDescriptor {
	return file_networking_proto_enumTypes[2].Descriptor()
}

func (AudioDevice_AudioDeviceFormFactor) Type() protoreflect.EnumType {
	return &file_networking_proto_enumTypes[2]
}

func (x AudioDevice_AudioDeviceFormFactor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type AudioDevice struct {
	state                  protoimpl.MessageState            `protogen:"opaque.v1"`
	xxx_hidden_Options     *AudioDevice_Options              `protobuf:"bytes,1,opt,name=options" json:"options,omitempty"`
	xxx_hidden_Description *string                           `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	xxx_hidden_Driver      *string                           `protobuf:"bytes,3,opt,name=driver" json:"driver,omitempty"`
	xxx_hidden_Index       int32                             `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	xxx_hidden_IsMonitor   bool                              `protobuf:"varint,5,opt,name=is_monitor,json=isMonitor" json:"is_monitor,omitempty"`
	xxx_hidden_State       AudioDevice_AudioDeviceState      `protobuf:"varint,6,opt,name=state,enum=networking.AudioDevice_AudioDeviceState" json:"state,omitempty"`
	xxx_hidden_Type        AudioDevice_Type                  `protobuf:"varint,7,opt,name=type,enum=networking.AudioDevice_Type" json:"type,omitempty"`
	xxx_hidden_Properties  map[string]string                 `protobuf:"bytes,8,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_FormFactor  AudioDevice_AudioDeviceFormFactor `protobuf:"varint,9,opt,name=form_factor,json=formFactor,enum=networking.AudioDevice_AudioDeviceFormFactor" json:"form_factor,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AudioDevice) Reset() {
	*x = AudioDevice{}
	mi := &file_networking_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioDevice) ProtoMessage() {}

func (x *AudioDevice) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AudioDevice) GetOptions() *AudioDevice_Options {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *AudioDevice) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *AudioDevice) GetDriver() string {
	if x != nil {
		if x.xxx_hidden_Driver != nil {
			return *x.xxx_hidden_Driver
		}
		return ""
	}
	return ""
}

func (x *AudioDevice) GetIndex() int32 {
	if x != nil {
		return x.xxx_hidden_Index
	}
	return 0
}

func (x *AudioDevice) GetIsMonitor() bool {
	if x != nil {
		return x.xxx_hidden_IsMonitor
	}
	return false
}

func (x *AudioDevice) GetState() AudioDevice_AudioDeviceState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_State
		}
	}
	return AudioDevice_IDLE
}

func (x *AudioDevice) GetType() AudioDevice_Type {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_Type
		}
	}
	return AudioDevice_SINK
}

func (x *AudioDevice) GetProperties() map[string]string {
	if x != nil {
		return x.xxx_hidden_Properties
	}
	return nil
}

func (x *AudioDevice) GetFormFactor() AudioDevice_AudioDeviceFormFactor {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_FormFactor
		}
	}
	return AudioDevice_CAR
}

func (x *AudioDevice) SetOptions(v *AudioDevice_Options) {
	x.xxx_hidden_Options = v
}

func (x *AudioDevice) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *AudioDevice) SetDriver(v string) {
	x.xxx_hidden_Driver = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *AudioDevice) SetIndex(v int32) {
	x.xxx_hidden_Index = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *AudioDevice) SetIsMonitor(v bool) {
	x.xxx_hidden_IsMonitor = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *AudioDevice) SetState(v AudioDevice_AudioDeviceState) {
	x.xxx_hidden_State = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *AudioDevice) SetType(v AudioDevice_Type) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *AudioDevice) SetProperties(v map[string]string) {
	x.xxx_hidden_Properties = v
}

func (x *AudioDevice) SetFormFactor(v AudioDevice_AudioDeviceFormFactor) {
	x.xxx_hidden_FormFactor = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *AudioDevice) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *AudioDevice) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AudioDevice) HasDriver() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AudioDevice) HasIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AudioDevice) HasIsMonitor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AudioDevice) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *AudioDevice) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *AudioDevice) HasFormFactor() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *AudioDevice) ClearOptions() {
	x.xxx_hidden_Options = nil
}

func (x *AudioDevice) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Description = nil
}

func (x *AudioDevice) ClearDriver() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Driver = nil
}

func (x *AudioDevice) ClearIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Index = 0
}

func (x *AudioDevice) ClearIsMonitor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_IsMonitor = false
}

func (x *AudioDevice) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_State = AudioDevice_IDLE
}

func (x *AudioDevice) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Type = AudioDevice_SINK
}

func (x *AudioDevice) ClearFormFactor() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_FormFactor = AudioDevice_CAR
}

type AudioDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Options     *AudioDevice_Options
	Description *string
	Driver      *string
	Index       *int32
	IsMonitor   *bool
	State       *AudioDevice_AudioDeviceState
	Type        *AudioDevice_Type
	Properties  map[string]string
	FormFactor  *AudioDevice_AudioDeviceFormFactor
}

func (b0 AudioDevice_builder) Build() *AudioDevice {
	m0 := &AudioDevice{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Options = b.Options
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Description = b.Description
	}
	if b.Driver != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Driver = b.Driver
	}
	if b.Index != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_Index = *b.Index
	}
	if b.IsMonitor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_IsMonitor = *b.IsMonitor
	}
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_State = *b.State
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_Type = *b.Type
	}
	x.xxx_hidden_Properties = b.Properties
	if b.FormFactor != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_FormFactor = *b.FormFactor
	}
	return m0
}

type VideoDevice struct {
	state                   protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	xxx_hidden_Index        uint32                    `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	xxx_hidden_Closed       bool                      `protobuf:"varint,3,opt,name=closed" json:"closed,omitempty"`
	xxx_hidden_Description  *string                   `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	xxx_hidden_Capabilities []string                  `protobuf:"bytes,5,rep,name=capabilities" json:"capabilities,omitempty"`
	xxx_hidden_VideoSizes   *[]*VideoDevice_VideoSize `protobuf:"bytes,6,rep,name=video_sizes,json=videoSizes" json:"video_sizes,omitempty"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *VideoDevice) Reset() {
	*x = VideoDevice{}
	mi := &file_networking_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDevice) ProtoMessage() {}

func (x *VideoDevice) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VideoDevice) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VideoDevice) GetIndex() uint32 {
	if x != nil {
		return x.xxx_hidden_Index
	}
	return 0
}

func (x *VideoDevice) GetClosed() bool {
	if x != nil {
		return x.xxx_hidden_Closed
	}
	return false
}

func (x *VideoDevice) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *VideoDevice) GetCapabilities() []string {
	if x != nil {
		return x.xxx_hidden_Capabilities
	}
	return nil
}

func (x *VideoDevice) GetVideoSizes() []*VideoDevice_VideoSize {
	if x != nil {
		if x.xxx_hidden_VideoSizes != nil {
			return *x.xxx_hidden_VideoSizes
		}
	}
	return nil
}

func (x *VideoDevice) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *VideoDevice) SetIndex(v uint32) {
	x.xxx_hidden_Index = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *VideoDevice) SetClosed(v bool) {
	x.xxx_hidden_Closed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *VideoDevice) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *VideoDevice) SetCapabilities(v []string) {
	x.xxx_hidden_Capabilities = v
}

func (x *VideoDevice) SetVideoSizes(v []*VideoDevice_VideoSize) {
	x.xxx_hidden_VideoSizes = &v
}

func (x *VideoDevice) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VideoDevice) HasIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VideoDevice) HasClosed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VideoDevice) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VideoDevice) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VideoDevice) ClearIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Index = 0
}

func (x *VideoDevice) ClearClosed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Closed = false
}

func (x *VideoDevice) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

type VideoDevice_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	Index        *uint32
	Closed       *bool
	Description  *string
	Capabilities []string
	VideoSizes   []*VideoDevice_VideoSize
}

func (b0 VideoDevice_builder) Build() *VideoDevice {
	m0 := &VideoDevice{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Index != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Index = *b.Index
	}
	if b.Closed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Closed = *b.Closed
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Capabilities = b.Capabilities
	x.xxx_hidden_VideoSizes = &b.VideoSizes
	return m0
}

type WebrtcInfo struct {
	state                 protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_IceServers *[]*WebrtcInfo_IceServer `protobuf:"bytes,1,rep,name=ice_servers,json=iceServers" json:"ice_servers,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *WebrtcInfo) Reset() {
	*x = WebrtcInfo{}
	mi := &file_networking_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebrtcInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebrtcInfo) ProtoMessage() {}

func (x *WebrtcInfo) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WebrtcInfo) GetIceServers() []*WebrtcInfo_IceServer {
	if x != nil {
		if x.xxx_hidden_IceServers != nil {
			return *x.xxx_hidden_IceServers
		}
	}
	return nil
}

func (x *WebrtcInfo) SetIceServers(v []*WebrtcInfo_IceServer) {
	x.xxx_hidden_IceServers = &v
}

type WebrtcInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	IceServers []*WebrtcInfo_IceServer
}

func (b0 WebrtcInfo_builder) Build() *WebrtcInfo {
	m0 := &WebrtcInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_IceServers = &b.IceServers
	return m0
}

type NamedTrack struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TrackId     *string                `protobuf:"bytes,1,opt,name=track_id,json=trackId" json:"track_id,omitempty"`
	xxx_hidden_StreamId    *string                `protobuf:"bytes,2,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	xxx_hidden_MimeType    *string                `protobuf:"bytes,3,opt,name=mime_type,json=mimeType" json:"mime_type,omitempty"`
	xxx_hidden_Properties  map[string]string      `protobuf:"bytes,4,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NamedTrack) Reset() {
	*x = NamedTrack{}
	mi := &file_networking_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamedTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedTrack) ProtoMessage() {}

func (x *NamedTrack) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NamedTrack) GetTrackId() string {
	if x != nil {
		if x.xxx_hidden_TrackId != nil {
			return *x.xxx_hidden_TrackId
		}
		return ""
	}
	return ""
}

func (x *NamedTrack) GetStreamId() string {
	if x != nil {
		if x.xxx_hidden_StreamId != nil {
			return *x.xxx_hidden_StreamId
		}
		return ""
	}
	return ""
}

func (x *NamedTrack) GetMimeType() string {
	if x != nil {
		if x.xxx_hidden_MimeType != nil {
			return *x.xxx_hidden_MimeType
		}
		return ""
	}
	return ""
}

func (x *NamedTrack) GetProperties() map[string]string {
	if x != nil {
		return x.xxx_hidden_Properties
	}
	return nil
}

func (x *NamedTrack) SetTrackId(v string) {
	x.xxx_hidden_TrackId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *NamedTrack) SetStreamId(v string) {
	x.xxx_hidden_StreamId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *NamedTrack) SetMimeType(v string) {
	x.xxx_hidden_MimeType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *NamedTrack) SetProperties(v map[string]string) {
	x.xxx_hidden_Properties = v
}

func (x *NamedTrack) HasTrackId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NamedTrack) HasStreamId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NamedTrack) HasMimeType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NamedTrack) ClearTrackId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TrackId = nil
}

func (x *NamedTrack) ClearStreamId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StreamId = nil
}

func (x *NamedTrack) ClearMimeType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MimeType = nil
}

type NamedTrack_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TrackId    *string
	StreamId   *string
	MimeType   *string
	Properties map[string]string
}

func (b0 NamedTrack_builder) Build() *NamedTrack {
	m0 := &NamedTrack{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TrackId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_TrackId = b.TrackId
	}
	if b.StreamId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StreamId = b.StreamId
	}
	if b.MimeType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_MimeType = b.MimeType
	}
	x.xxx_hidden_Properties = b.Properties
	return m0
}

// uuid can be any string that uniquely identifies the sender/receiver. No specific format required.
// Define the transmitter (T) as the side with a dest_uuid (in either Data or Media Transmission) that refers to the broadcaster (B).
// In the case that both sides have specified dest_uuid that refer to each other, the side that initiates first is T.
// Offer negotiations is as follows:
// 1. T -> T's Media -> B (Request)
// 2. B -> Wanted T's Media, B's Media -> T (Response)
// 3. T -> Wanted B's Media, Wanted T's Media, SDP offer, type -> B (Request)
// 4. B -> SDP answer, type -> T (Response)
// 5. Connection Established. T -> Wanted T's Media -> B; B -> Wanted B's Media -> T
type WebrtcOffer struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SrcUuid         *string                `protobuf:"bytes,1,opt,name=src_uuid,json=srcUuid" json:"src_uuid,omitempty"`
	xxx_hidden_Sdp             *string                `protobuf:"bytes,2,opt,name=sdp" json:"sdp,omitempty"`
	xxx_hidden_Type            *string                `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	xxx_hidden_LocalTracks     *[]*NamedTrack         `protobuf:"bytes,4,rep,name=local_tracks,json=localTracks" json:"local_tracks,omitempty"`
	xxx_hidden_LocalTracksSet  bool                   `protobuf:"varint,5,opt,name=local_tracks_set,json=localTracksSet" json:"local_tracks_set,omitempty"`
	xxx_hidden_RemoteTracks    *[]*NamedTrack         `protobuf:"bytes,6,rep,name=remote_tracks,json=remoteTracks" json:"remote_tracks,omitempty"`
	xxx_hidden_RemoteTracksSet bool                   `protobuf:"varint,7,opt,name=remote_tracks_set,json=remoteTracksSet" json:"remote_tracks_set,omitempty"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *WebrtcOffer) Reset() {
	*x = WebrtcOffer{}
	mi := &file_networking_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebrtcOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebrtcOffer) ProtoMessage() {}

func (x *WebrtcOffer) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WebrtcOffer) GetSrcUuid() string {
	if x != nil {
		if x.xxx_hidden_SrcUuid != nil {
			return *x.xxx_hidden_SrcUuid
		}
		return ""
	}
	return ""
}

func (x *WebrtcOffer) GetSdp() string {
	if x != nil {
		if x.xxx_hidden_Sdp != nil {
			return *x.xxx_hidden_Sdp
		}
		return ""
	}
	return ""
}

func (x *WebrtcOffer) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *WebrtcOffer) GetLocalTracks() []*NamedTrack {
	if x != nil {
		if x.xxx_hidden_LocalTracks != nil {
			return *x.xxx_hidden_LocalTracks
		}
	}
	return nil
}

func (x *WebrtcOffer) GetLocalTracksSet() bool {
	if x != nil {
		return x.xxx_hidden_LocalTracksSet
	}
	return false
}

func (x *WebrtcOffer) GetRemoteTracks() []*NamedTrack {
	if x != nil {
		if x.xxx_hidden_RemoteTracks != nil {
			return *x.xxx_hidden_RemoteTracks
		}
	}
	return nil
}

func (x *WebrtcOffer) GetRemoteTracksSet() bool {
	if x != nil {
		return x.xxx_hidden_RemoteTracksSet
	}
	return false
}

func (x *WebrtcOffer) SetSrcUuid(v string) {
	x.xxx_hidden_SrcUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *WebrtcOffer) SetSdp(v string) {
	x.xxx_hidden_Sdp = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *WebrtcOffer) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *WebrtcOffer) SetLocalTracks(v []*NamedTrack) {
	x.xxx_hidden_LocalTracks = &v
}

func (x *WebrtcOffer) SetLocalTracksSet(v bool) {
	x.xxx_hidden_LocalTracksSet = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *WebrtcOffer) SetRemoteTracks(v []*NamedTrack) {
	x.xxx_hidden_RemoteTracks = &v
}

func (x *WebrtcOffer) SetRemoteTracksSet(v bool) {
	x.xxx_hidden_RemoteTracksSet = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *WebrtcOffer) HasSrcUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *WebrtcOffer) HasSdp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *WebrtcOffer) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *WebrtcOffer) HasLocalTracksSet() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *WebrtcOffer) HasRemoteTracksSet() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *WebrtcOffer) ClearSrcUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SrcUuid = nil
}

func (x *WebrtcOffer) ClearSdp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Sdp = nil
}

func (x *WebrtcOffer) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Type = nil
}

func (x *WebrtcOffer) ClearLocalTracksSet() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_LocalTracksSet = false
}

func (x *WebrtcOffer) ClearRemoteTracksSet() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_RemoteTracksSet = false
}

type WebrtcOffer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SrcUuid         *string
	Sdp             *string
	Type            *string
	LocalTracks     []*NamedTrack
	LocalTracksSet  *bool
	RemoteTracks    []*NamedTrack
	RemoteTracksSet *bool
}

func (b0 WebrtcOffer_builder) Build() *WebrtcOffer {
	m0 := &WebrtcOffer{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SrcUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_SrcUuid = b.SrcUuid
	}
	if b.Sdp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Sdp = b.Sdp
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Type = b.Type
	}
	x.xxx_hidden_LocalTracks = &b.LocalTracks
	if b.LocalTracksSet != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_LocalTracksSet = *b.LocalTracksSet
	}
	x.xxx_hidden_RemoteTracks = &b.RemoteTracks
	if b.RemoteTracksSet != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_RemoteTracksSet = *b.RemoteTracksSet
	}
	return m0
}

type DataTransmission struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SrcUuid     *string                `protobuf:"bytes,1,opt,name=src_uuid,json=srcUuid" json:"src_uuid,omitempty"`
	xxx_hidden_DestUuid    *string                `protobuf:"bytes,2,opt,name=dest_uuid,json=destUuid" json:"dest_uuid,omitempty"`
	xxx_hidden_MimeType    *string                `protobuf:"bytes,3,opt,name=mime_type,json=mimeType" json:"mime_type,omitempty"`
	xxx_hidden_Payload     [][]byte               `protobuf:"bytes,4,rep,name=payload" json:"payload,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DataTransmission) Reset() {
	*x = DataTransmission{}
	mi := &file_networking_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTransmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTransmission) ProtoMessage() {}

func (x *DataTransmission) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataTransmission) GetSrcUuid() string {
	if x != nil {
		if x.xxx_hidden_SrcUuid != nil {
			return *x.xxx_hidden_SrcUuid
		}
		return ""
	}
	return ""
}

func (x *DataTransmission) GetDestUuid() string {
	if x != nil {
		if x.xxx_hidden_DestUuid != nil {
			return *x.xxx_hidden_DestUuid
		}
		return ""
	}
	return ""
}

func (x *DataTransmission) GetMimeType() string {
	if x != nil {
		if x.xxx_hidden_MimeType != nil {
			return *x.xxx_hidden_MimeType
		}
		return ""
	}
	return ""
}

func (x *DataTransmission) GetPayload() [][]byte {
	if x != nil {
		return x.xxx_hidden_Payload
	}
	return nil
}

func (x *DataTransmission) SetSrcUuid(v string) {
	x.xxx_hidden_SrcUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DataTransmission) SetDestUuid(v string) {
	x.xxx_hidden_DestUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DataTransmission) SetMimeType(v string) {
	x.xxx_hidden_MimeType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DataTransmission) SetPayload(v [][]byte) {
	x.xxx_hidden_Payload = v
}

func (x *DataTransmission) HasSrcUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DataTransmission) HasDestUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DataTransmission) HasMimeType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DataTransmission) ClearSrcUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SrcUuid = nil
}

func (x *DataTransmission) ClearDestUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DestUuid = nil
}

func (x *DataTransmission) ClearMimeType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MimeType = nil
}

type DataTransmission_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SrcUuid  *string
	DestUuid *string
	MimeType *string
	Payload  [][]byte
}

func (b0 DataTransmission_builder) Build() *DataTransmission {
	m0 := &DataTransmission{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SrcUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_SrcUuid = b.SrcUuid
	}
	if b.DestUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_DestUuid = b.DestUuid
	}
	if b.MimeType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_MimeType = b.MimeType
	}
	x.xxx_hidden_Payload = b.Payload
	return m0
}

type MediaTransmission struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SrcUuid     *string                `protobuf:"bytes,1,opt,name=src_uuid,json=srcUuid" json:"src_uuid,omitempty"`
	xxx_hidden_DestUuid    *string                `protobuf:"bytes,2,opt,name=dest_uuid,json=destUuid" json:"dest_uuid,omitempty"`
	xxx_hidden_Tracks      *[]*NamedTrack         `protobuf:"bytes,3,rep,name=tracks" json:"tracks,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MediaTransmission) Reset() {
	*x = MediaTransmission{}
	mi := &file_networking_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaTransmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaTransmission) ProtoMessage() {}

func (x *MediaTransmission) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MediaTransmission) GetSrcUuid() string {
	if x != nil {
		if x.xxx_hidden_SrcUuid != nil {
			return *x.xxx_hidden_SrcUuid
		}
		return ""
	}
	return ""
}

func (x *MediaTransmission) GetDestUuid() string {
	if x != nil {
		if x.xxx_hidden_DestUuid != nil {
			return *x.xxx_hidden_DestUuid
		}
		return ""
	}
	return ""
}

func (x *MediaTransmission) GetTracks() []*NamedTrack {
	if x != nil {
		if x.xxx_hidden_Tracks != nil {
			return *x.xxx_hidden_Tracks
		}
	}
	return nil
}

func (x *MediaTransmission) SetSrcUuid(v string) {
	x.xxx_hidden_SrcUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *MediaTransmission) SetDestUuid(v string) {
	x.xxx_hidden_DestUuid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *MediaTransmission) SetTracks(v []*NamedTrack) {
	x.xxx_hidden_Tracks = &v
}

func (x *MediaTransmission) HasSrcUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MediaTransmission) HasDestUuid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MediaTransmission) ClearSrcUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SrcUuid = nil
}

func (x *MediaTransmission) ClearDestUuid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DestUuid = nil
}

type MediaTransmission_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SrcUuid  *string
	DestUuid *string
	// Track properties must include `shmsrc_socket-path` [shmsrc](https://gstreamer.freedesktop.org/documentation/shm/shmsrc.html) to begin consuming media
	// This is authoritative: only the given tracks will be sent, all previous configurations are forgotten.
	Tracks []*NamedTrack
}

func (b0 MediaTransmission_builder) Build() *MediaTransmission {
	m0 := &MediaTransmission{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SrcUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_SrcUuid = b.SrcUuid
	}
	if b.DestUuid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_DestUuid = b.DestUuid
	}
	x.xxx_hidden_Tracks = &b.Tracks
	return m0
}

type KernelMutation struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Data  *DataTransmission      `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	xxx_hidden_Media *MediaTransmission     `protobuf:"bytes,2,opt,name=media" json:"media,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *KernelMutation) Reset() {
	*x = KernelMutation{}
	mi := &file_networking_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KernelMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelMutation) ProtoMessage() {}

func (x *KernelMutation) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KernelMutation) GetData() *DataTransmission {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *KernelMutation) GetMedia() *MediaTransmission {
	if x != nil {
		return x.xxx_hidden_Media
	}
	return nil
}

func (x *KernelMutation) SetData(v *DataTransmission) {
	x.xxx_hidden_Data = v
}

func (x *KernelMutation) SetMedia(v *MediaTransmission) {
	x.xxx_hidden_Media = v
}

func (x *KernelMutation) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *KernelMutation) HasMedia() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Media != nil
}

func (x *KernelMutation) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *KernelMutation) ClearMedia() {
	x.xxx_hidden_Media = nil
}

type KernelMutation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Data  *DataTransmission
	Media *MediaTransmission
}

func (b0 KernelMutation_builder) Build() *KernelMutation {
	m0 := &KernelMutation{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Data = b.Data
	x.xxx_hidden_Media = b.Media
	return m0
}

type SetWantedTracks struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_WantedTracks *[]*NamedTrack         `protobuf:"bytes,1,rep,name=wanted_tracks,json=wantedTracks" json:"wanted_tracks,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SetWantedTracks) Reset() {
	*x = SetWantedTracks{}
	mi := &file_networking_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWantedTracks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWantedTracks) ProtoMessage() {}

func (x *SetWantedTracks) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetWantedTracks) GetWantedTracks() []*NamedTrack {
	if x != nil {
		if x.xxx_hidden_WantedTracks != nil {
			return *x.xxx_hidden_WantedTracks
		}
	}
	return nil
}

func (x *SetWantedTracks) SetWantedTracks(v []*NamedTrack) {
	x.xxx_hidden_WantedTracks = &v
}

type SetWantedTracks_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	WantedTracks []*NamedTrack
}

func (b0 SetWantedTracks_builder) Build() *SetWantedTracks {
	m0 := &SetWantedTracks{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_WantedTracks = &b.WantedTracks
	return m0
}

type KernelEvent struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Data         *DataTransmission      `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	xxx_hidden_Media        *MediaTransmission     `protobuf:"bytes,2,opt,name=media" json:"media,omitempty"`
	xxx_hidden_WantedTracks *SetWantedTracks       `protobuf:"bytes,3,opt,name=wantedTracks" json:"wantedTracks,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *KernelEvent) Reset() {
	*x = KernelEvent{}
	mi := &file_networking_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KernelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelEvent) ProtoMessage() {}

func (x *KernelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KernelEvent) GetData() *DataTransmission {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *KernelEvent) GetMedia() *MediaTransmission {
	if x != nil {
		return x.xxx_hidden_Media
	}
	return nil
}

func (x *KernelEvent) GetWantedTracks() *SetWantedTracks {
	if x != nil {
		return x.xxx_hidden_WantedTracks
	}
	return nil
}

func (x *KernelEvent) SetData(v *DataTransmission) {
	x.xxx_hidden_Data = v
}

func (x *KernelEvent) SetMedia(v *MediaTransmission) {
	x.xxx_hidden_Media = v
}

func (x *KernelEvent) SetWantedTracks(v *SetWantedTracks) {
	x.xxx_hidden_WantedTracks = v
}

func (x *KernelEvent) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *KernelEvent) HasMedia() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Media != nil
}

func (x *KernelEvent) HasWantedTracks() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_WantedTracks != nil
}

func (x *KernelEvent) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *KernelEvent) ClearMedia() {
	x.xxx_hidden_Media = nil
}

func (x *KernelEvent) ClearWantedTracks() {
	x.xxx_hidden_WantedTracks = nil
}

type KernelEvent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Data         *DataTransmission
	Media        *MediaTransmission
	WantedTracks *SetWantedTracks
}

func (b0 KernelEvent_builder) Build() *KernelEvent {
	m0 := &KernelEvent{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Data = b.Data
	x.xxx_hidden_Media = b.Media
	x.xxx_hidden_WantedTracks = b.WantedTracks
	return m0
}

type AudioDevice_Options struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	xxx_hidden_Default_    bool                   `protobuf:"varint,2,opt,name=default_,json=default" json:"default_,omitempty"`
	xxx_hidden_Volume      float32                `protobuf:"fixed32,3,opt,name=volume" json:"volume,omitempty"`
	xxx_hidden_Mute        bool                   `protobuf:"varint,4,opt,name=mute" json:"mute,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AudioDevice_Options) Reset() {
	*x = AudioDevice_Options{}
	mi := &file_networking_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioDevice_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioDevice_Options) ProtoMessage() {}

func (x *AudioDevice_Options) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AudioDevice_Options) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *AudioDevice_Options) GetDefault_() bool {
	if x != nil {
		return x.xxx_hidden_Default_
	}
	return false
}

func (x *AudioDevice_Options) GetVolume() float32 {
	if x != nil {
		return x.xxx_hidden_Volume
	}
	return 0
}

func (x *AudioDevice_Options) GetMute() bool {
	if x != nil {
		return x.xxx_hidden_Mute
	}
	return false
}

func (x *AudioDevice_Options) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *AudioDevice_Options) SetDefault_(v bool) {
	x.xxx_hidden_Default_ = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *AudioDevice_Options) SetVolume(v float32) {
	x.xxx_hidden_Volume = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *AudioDevice_Options) SetMute(v bool) {
	x.xxx_hidden_Mute = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *AudioDevice_Options) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AudioDevice_Options) HasDefault_() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AudioDevice_Options) HasVolume() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AudioDevice_Options) HasMute() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AudioDevice_Options) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *AudioDevice_Options) ClearDefault_() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Default_ = false
}

func (x *AudioDevice_Options) ClearVolume() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Volume = 0
}

func (x *AudioDevice_Options) ClearMute() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Mute = false
}

type AudioDevice_Options_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name     *string
	Default_ *bool
	Volume   *float32
	Mute     *bool
}

func (b0 AudioDevice_Options_builder) Build() *AudioDevice_Options {
	m0 := &AudioDevice_Options{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Default_ != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Default_ = *b.Default_
	}
	if b.Volume != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Volume = *b.Volume
	}
	if b.Mute != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Mute = *b.Mute
	}
	return m0
}

type VideoDevice_VideoSize struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Height      uint32                 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	xxx_hidden_Width       uint32                 `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	xxx_hidden_Fps         []float32              `protobuf:"fixed32,3,rep,packed,name=fps" json:"fps,omitempty"`
	xxx_hidden_Format      *string                `protobuf:"bytes,4,opt,name=format" json:"format,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VideoDevice_VideoSize) Reset() {
	*x = VideoDevice_VideoSize{}
	mi := &file_networking_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoDevice_VideoSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDevice_VideoSize) ProtoMessage() {}

func (x *VideoDevice_VideoSize) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VideoDevice_VideoSize) GetHeight() uint32 {
	if x != nil {
		return x.xxx_hidden_Height
	}
	return 0
}

func (x *VideoDevice_VideoSize) GetWidth() uint32 {
	if x != nil {
		return x.xxx_hidden_Width
	}
	return 0
}

func (x *VideoDevice_VideoSize) GetFps() []float32 {
	if x != nil {
		return x.xxx_hidden_Fps
	}
	return nil
}

func (x *VideoDevice_VideoSize) GetFormat() string {
	if x != nil {
		if x.xxx_hidden_Format != nil {
			return *x.xxx_hidden_Format
		}
		return ""
	}
	return ""
}

func (x *VideoDevice_VideoSize) SetHeight(v uint32) {
	x.xxx_hidden_Height = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *VideoDevice_VideoSize) SetWidth(v uint32) {
	x.xxx_hidden_Width = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *VideoDevice_VideoSize) SetFps(v []float32) {
	x.xxx_hidden_Fps = v
}

func (x *VideoDevice_VideoSize) SetFormat(v string) {
	x.xxx_hidden_Format = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *VideoDevice_VideoSize) HasHeight() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VideoDevice_VideoSize) HasWidth() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VideoDevice_VideoSize) HasFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VideoDevice_VideoSize) ClearHeight() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Height = 0
}

func (x *VideoDevice_VideoSize) ClearWidth() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Width = 0
}

func (x *VideoDevice_VideoSize) ClearFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Format = nil
}

type VideoDevice_VideoSize_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Height *uint32
	Width  *uint32
	Fps    []float32
	Format *string
}

func (b0 VideoDevice_VideoSize_builder) Build() *VideoDevice_VideoSize {
	m0 := &VideoDevice_VideoSize{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Height != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Height = *b.Height
	}
	if b.Width != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Width = *b.Width
	}
	x.xxx_hidden_Fps = b.Fps
	if b.Format != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Format = b.Format
	}
	return m0
}

type WebrtcInfo_IceServer struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Urls        *string                `protobuf:"bytes,1,opt,name=urls" json:"urls,omitempty"`
	xxx_hidden_Username    *string                `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	xxx_hidden_Credential  *string                `protobuf:"bytes,3,opt,name=credential" json:"credential,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *WebrtcInfo_IceServer) Reset() {
	*x = WebrtcInfo_IceServer{}
	mi := &file_networking_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebrtcInfo_IceServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebrtcInfo_IceServer) ProtoMessage() {}

func (x *WebrtcInfo_IceServer) ProtoReflect() protoreflect.Message {
	mi := &file_networking_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WebrtcInfo_IceServer) GetUrls() string {
	if x != nil {
		if x.xxx_hidden_Urls != nil {
			return *x.xxx_hidden_Urls
		}
		return ""
	}
	return ""
}

func (x *WebrtcInfo_IceServer) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *WebrtcInfo_IceServer) GetCredential() string {
	if x != nil {
		if x.xxx_hidden_Credential != nil {
			return *x.xxx_hidden_Credential
		}
		return ""
	}
	return ""
}

func (x *WebrtcInfo_IceServer) SetUrls(v string) {
	x.xxx_hidden_Urls = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *WebrtcInfo_IceServer) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *WebrtcInfo_IceServer) SetCredential(v string) {
	x.xxx_hidden_Credential = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *WebrtcInfo_IceServer) HasUrls() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *WebrtcInfo_IceServer) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *WebrtcInfo_IceServer) HasCredential() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *WebrtcInfo_IceServer) ClearUrls() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Urls = nil
}

func (x *WebrtcInfo_IceServer) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Username = nil
}

func (x *WebrtcInfo_IceServer) ClearCredential() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Credential = nil
}

type WebrtcInfo_IceServer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Urls       *string
	Username   *string
	Credential *string
}

func (b0 WebrtcInfo_IceServer_builder) Build() *WebrtcInfo_IceServer {
	m0 := &WebrtcInfo_IceServer{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Urls != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Urls = b.Urls
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Username = b.Username
	}
	if b.Credential != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Credential = b.Credential
	}
	return m0
}

var File_networking_proto protoreflect.FileDescriptor

var file_networking_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x9a,
	0x07, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0x64, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x45, 0x0a, 0x10, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x03, 0x22,
	0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x49, 0x4e, 0x4b, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x01, 0x22, 0xcb, 0x01,
	0x0a, 0x15, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x52, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x48, 0x41, 0x4e, 0x44, 0x53, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x48, 0x41, 0x4e, 0x44, 0x53, 0x45, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x48,
	0x45, 0x41, 0x44, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45,
	0x41, 0x44, 0x53, 0x45, 0x54, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x46, 0x49, 0x10,
	0x06, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x07, 0x12,
	0x0e, 0x0a, 0x0a, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x08, 0x12,
	0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x09, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x50, 0x45, 0x41, 0x4b, 0x45, 0x52, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x56,
	0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x42, 0x43, 0x41, 0x4d, 0x10, 0x0c, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x0d, 0x22, 0xbe, 0x02, 0x0a, 0x0b,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x0a, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x1a, 0x63, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x03, 0x66, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xac, 0x01, 0x0a,
	0x0a, 0x57, 0x65, 0x62, 0x72, 0x74, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0b, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x65,
	0x62, 0x72, 0x74, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x0a, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a, 0x5b,
	0x0a, 0x09, 0x49, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0xe8, 0x01, 0x0a, 0x0a,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x46, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x02, 0x0a, 0x0b, 0x57, 0x65, 0x62, 0x72, 0x74,
	0x63, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x64, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x64, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x53, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0d,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x0c, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x73, 0x53, 0x65, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72,
	0x63, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72,
	0x63, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x7b, 0x0a, 0x11, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x72, 0x63, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73,
	0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x06,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x77, 0x0a, 0x0e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22,
	0x4e, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x22,
	0xb5, 0x01, 0x0a, 0x0b, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x33, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x3f, 0x0a, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6e,
	0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x7a, 0x68, 0x6f, 0x75, 0x30, 0x2f, 0x73, 0x77, 0x61,
	0x72, 0x6d, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x3b, 0x69, 0x70, 0x63, 0x62, 0x08, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_networking_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_networking_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_networking_proto_goTypes = []any{
	(AudioDevice_AudioDeviceState)(0),      // 0: networking.AudioDevice.AudioDeviceState
	(AudioDevice_Type)(0),                  // 1: networking.AudioDevice.Type
	(AudioDevice_AudioDeviceFormFactor)(0), // 2: networking.AudioDevice.AudioDeviceFormFactor
	(*AudioDevice)(nil),                    // 3: networking.AudioDevice
	(*VideoDevice)(nil),                    // 4: networking.VideoDevice
	(*WebrtcInfo)(nil),                     // 5: networking.WebrtcInfo
	(*NamedTrack)(nil),                     // 6: networking.NamedTrack
	(*WebrtcOffer)(nil),                    // 7: networking.WebrtcOffer
	(*DataTransmission)(nil),               // 8: networking.DataTransmission
	(*MediaTransmission)(nil),              // 9: networking.MediaTransmission
	(*KernelMutation)(nil),                 // 10: networking.KernelMutation
	(*SetWantedTracks)(nil),                // 11: networking.SetWantedTracks
	(*KernelEvent)(nil),                    // 12: networking.KernelEvent
	(*AudioDevice_Options)(nil),            // 13: networking.AudioDevice.Options
	nil,                                    // 14: networking.AudioDevice.PropertiesEntry
	(*VideoDevice_VideoSize)(nil),          // 15: networking.VideoDevice.VideoSize
	(*WebrtcInfo_IceServer)(nil),           // 16: networking.WebrtcInfo.IceServer
	nil,                                    // 17: networking.NamedTrack.PropertiesEntry
}
var file_networking_proto_depIdxs = []int32{
	13, // 0: networking.AudioDevice.options:type_name -> networking.AudioDevice.Options
	0,  // 1: networking.AudioDevice.state:type_name -> networking.AudioDevice.AudioDeviceState
	1,  // 2: networking.AudioDevice.type:type_name -> networking.AudioDevice.Type
	14, // 3: networking.AudioDevice.properties:type_name -> networking.AudioDevice.PropertiesEntry
	2,  // 4: networking.AudioDevice.form_factor:type_name -> networking.AudioDevice.AudioDeviceFormFactor
	15, // 5: networking.VideoDevice.video_sizes:type_name -> networking.VideoDevice.VideoSize
	16, // 6: networking.WebrtcInfo.ice_servers:type_name -> networking.WebrtcInfo.IceServer
	17, // 7: networking.NamedTrack.properties:type_name -> networking.NamedTrack.PropertiesEntry
	6,  // 8: networking.WebrtcOffer.local_tracks:type_name -> networking.NamedTrack
	6,  // 9: networking.WebrtcOffer.remote_tracks:type_name -> networking.NamedTrack
	6,  // 10: networking.MediaTransmission.tracks:type_name -> networking.NamedTrack
	8,  // 11: networking.KernelMutation.data:type_name -> networking.DataTransmission
	9,  // 12: networking.KernelMutation.media:type_name -> networking.MediaTransmission
	6,  // 13: networking.SetWantedTracks.wanted_tracks:type_name -> networking.NamedTrack
	8,  // 14: networking.KernelEvent.data:type_name -> networking.DataTransmission
	9,  // 15: networking.KernelEvent.media:type_name -> networking.MediaTransmission
	11, // 16: networking.KernelEvent.wantedTracks:type_name -> networking.SetWantedTracks
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_networking_proto_init() }
func file_networking_proto_init() {
	if File_networking_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_networking_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_networking_proto_goTypes,
		DependencyIndexes: file_networking_proto_depIdxs,
		EnumInfos:         file_networking_proto_enumTypes,
		MessageInfos:      file_networking_proto_msgTypes,
	}.Build()
	File_networking_proto = out.File
	file_networking_proto_rawDesc = nil
	file_networking_proto_goTypes = nil
	file_networking_proto_depIdxs = nil
}
